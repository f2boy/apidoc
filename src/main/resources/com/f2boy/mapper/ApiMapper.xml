<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.f2boy.dao.ApiMapper" >
  <resultMap id="BaseResultMap" type="com.f2boy.domain.entity.Api" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="uri" property="uri" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="function" property="function" jdbcType="VARCHAR" />
    <result column="content_type" property="contentType" jdbcType="VARCHAR" />
    <result column="params" property="params" jdbcType="VARCHAR" typeHandler="com.f2boy.typehandler.ApiParamsJsonTypeHandler" />
    <result column="json_params" property="jsonParams" jdbcType="VARCHAR" />
    <result column="response" property="response" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="sort_no" property="sortNo" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.paramsCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler} and #{criterion.secondValue,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.paramsCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler} and #{criterion.secondValue,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, module_id, name, uri, method, function, content_type, params, json_params, response, 
    memo, sort_no, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.f2boy.domain.entity.ApiExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from api
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from api
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.f2boy.domain.entity.ApiExample" >
    delete from api
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.f2boy.domain.entity.Api" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api (module_id, name, uri, 
      method, function, content_type, 
      params, 
      json_params, response, memo, 
      sort_no, create_time, update_time
      )
    values (#{moduleId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{uri,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{function,jdbcType=VARCHAR}, #{contentType,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler}, 
      #{jsonParams,jdbcType=VARCHAR}, #{response,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{sortNo,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.f2boy.domain.entity.Api" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="uri != null" >
        uri,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="function != null" >
        function,
      </if>
      <if test="contentType != null" >
        content_type,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="jsonParams != null" >
        json_params,
      </if>
      <if test="response != null" >
        response,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="sortNo != null" >
        sort_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="uri != null" >
        #{uri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="function != null" >
        #{function,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        #{params,jdbcType=VARCHAR,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler},
      </if>
      <if test="jsonParams != null" >
        #{jsonParams,jdbcType=VARCHAR},
      </if>
      <if test="response != null" >
        #{response,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null" >
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.f2boy.domain.entity.ApiExample" resultType="java.lang.Integer" >
    select count(*) from api
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update api
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.moduleId != null" >
        module_id = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.uri != null" >
        uri = #{record.uri,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.function != null" >
        function = #{record.function,jdbcType=VARCHAR},
      </if>
      <if test="record.contentType != null" >
        content_type = #{record.contentType,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null" >
        params = #{record.params,jdbcType=VARCHAR,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler},
      </if>
      <if test="record.jsonParams != null" >
        json_params = #{record.jsonParams,jdbcType=VARCHAR},
      </if>
      <if test="record.response != null" >
        response = #{record.response,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNo != null" >
        sort_no = #{record.sortNo,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api
    set id = #{record.id,jdbcType=INTEGER},
      module_id = #{record.moduleId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      uri = #{record.uri,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      function = #{record.function,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler},
      json_params = #{record.jsonParams,jdbcType=VARCHAR},
      response = #{record.response,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      sort_no = #{record.sortNo,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.f2boy.domain.entity.Api" >
    update api
    <set >
      <if test="moduleId != null" >
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="uri != null" >
        uri = #{uri,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="function != null" >
        function = #{function,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null" >
        content_type = #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=VARCHAR,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler},
      </if>
      <if test="jsonParams != null" >
        json_params = #{jsonParams,jdbcType=VARCHAR},
      </if>
      <if test="response != null" >
        response = #{response,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null" >
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.f2boy.domain.entity.Api" >
    update api
    set module_id = #{moduleId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      uri = #{uri,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      function = #{function,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR,typeHandler=com.f2boy.typehandler.ApiParamsJsonTypeHandler},
      json_params = #{jsonParams,jdbcType=VARCHAR},
      response = #{response,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      sort_no = #{sortNo,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>